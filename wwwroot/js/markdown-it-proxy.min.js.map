{"version":3,"file":"markdown-it-proxy.min.js","sources":["../markdown-it-proxy/node_modules/markdown-it/lib/common/entities.js","../markdown-it-proxy/node_modules/uc.micro/categories/P/regex.js","../markdown-it-proxy/node_modules/mdurl/encode.js","../markdown-it-proxy/node_modules/mdurl/decode.js","../markdown-it-proxy/node_modules/mdurl/format.js","../markdown-it-proxy/node_modules/mdurl/parse.js","../markdown-it-proxy/node_modules/mdurl/index.js","../markdown-it-proxy/node_modules/uc.micro/properties/Any/regex.js","../markdown-it-proxy/node_modules/uc.micro/categories/Cc/regex.js","../markdown-it-proxy/node_modules/uc.micro/categories/Cf/regex.js","../markdown-it-proxy/node_modules/uc.micro/categories/Z/regex.js","../markdown-it-proxy/node_modules/uc.micro/index.js","../markdown-it-proxy/node_modules/markdown-it/lib/common/utils.js","../markdown-it-proxy/node_modules/markdown-it/lib/helpers/parse_link_label.js","../markdown-it-proxy/node_modules/markdown-it/lib/helpers/parse_link_destination.js","../markdown-it-proxy/node_modules/markdown-it/lib/helpers/parse_link_title.js","../markdown-it-proxy/node_modules/markdown-it/lib/helpers/index.js","../markdown-it-proxy/node_modules/markdown-it/lib/renderer.js","../markdown-it-proxy/node_modules/markdown-it/lib/ruler.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_core/normalize.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_core/block.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_core/inline.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_core/linkify.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_core/replacements.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_core/smartquotes.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_core/text_join.js","../markdown-it-proxy/node_modules/markdown-it/lib/token.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_core/state_core.js","../markdown-it-proxy/node_modules/markdown-it/lib/parser_core.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_block/table.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_block/code.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_block/fence.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_block/blockquote.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_block/hr.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_block/list.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_block/reference.js","../markdown-it-proxy/node_modules/markdown-it/lib/common/html_blocks.js","../markdown-it-proxy/node_modules/markdown-it/lib/common/html_re.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_block/html_block.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_block/heading.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_block/lheading.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_block/paragraph.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_block/state_block.js","../markdown-it-proxy/node_modules/markdown-it/lib/parser_block.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_inline/text.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_inline/linkify.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_inline/newline.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_inline/escape.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_inline/backticks.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_inline/strikethrough.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_inline/emphasis.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_inline/link.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_inline/image.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_inline/autolink.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_inline/html_inline.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_inline/entity.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_inline/balance_pairs.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_inline/fragments_join.js","../markdown-it-proxy/node_modules/markdown-it/lib/rules_inline/state_inline.js","../markdown-it-proxy/node_modules/markdown-it/lib/parser_inline.js","../markdown-it-proxy/node_modules/linkify-it/lib/re.js","../markdown-it-proxy/node_modules/linkify-it/index.js","../markdown-it-proxy/node_modules/punycode/punycode.js","../markdown-it-proxy/node_modules/markdown-it/lib/presets/default.js","../markdown-it-proxy/node_modules/markdown-it/lib/presets/zero.js","../markdown-it-proxy/node_modules/markdown-it/lib/presets/commonmark.js","../markdown-it-proxy/node_modules/markdown-it/lib/index.js","../markdown-it-proxy/node_modules/markdown-it/index.js","../markdown-it-proxy/node_modules/markdown-it-class/index.js","../markdown-it-proxy/index.ts"],"sourcesContent":["// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\n\nmodule.exports = function text_join(state) {\n  var j, l, tokens, curr, max, last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr]; }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  [ 'text_join',      require('./rules_core/text_join')      ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Process links like https://example.org/\n\n'use strict';\n\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n\n  pos = state.pos;\n  max = state.posMax;\n\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false;\n\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n\n  proto = match[1];\n\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n\n  url = link.url;\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '');\n\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n\n    token         = state.push('link_open', 'a', 1);\n    token.attrs   = [ [ 'href', fullUrl ] ];\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n\n    token         = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n\n    token         = state.push('link_close', 'a', -1);\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch1, ch2, origStr, escapedStr, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false;\n  pos++;\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false;\n\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++;\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info   = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n\n    if (isLinkOpen(token.content))  state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false;\n\n  if (pos + 1 >= max) return false;\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23 /* # */) {\n    match = state.src.slice(pos).match(DIGITAL_RE);\n    if (match) {\n      if (!silent) {\n        code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n\n        token         = state.push('text_special', '', 0);\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        token.markup  = match[0];\n        token.info    = 'entity';\n      }\n      state.pos += match[0].length;\n      return true;\n    }\n  } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token         = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup  = match[0];\n          token.info    = 'entity';\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function fragments_join(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'linkify',         require('./rules_inline/linkify') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  [ 'fragments_join',  require('./rules_inline/fragments_join') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n  opts = opts || {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + '|$)|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + '|$)|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test     = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) return null;\n\n  var m = this.re.schema_at_start.exec(text);\n  if (!m) return null;\n\n  var len = this.testSchemaAt(text, m[2], m[0].length);\n  if (!len) return null;\n\n  this.__schema__     = m[2];\n  this.__index__      = m.index + m[1].length;\n  this.__last_index__ = m.index + m[0].length + len;\n\n  return createMatch(this, 0);\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nmodule.exports = punycode;\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","/**\n * Takes the markdown-it tokens and assigns classes to each token\n *\n * @param tokens Tokens injected by the markdown-it plugin\n * @param mapping Tag to class mapping\n */\nfunction setTokenClasses(tokens, mapping = {}) {\n  tokens.forEach((token) => {\n    /**\n     * `token.nesting` is a number referring to the nature of the tag.\n     *\n     * - `1` means the tag is opening\n     * - `0` means the tag is self-closing\n     * - `-1` means the tag is closing\n     *\n     * @see https://github.com/markdown-it/markdown-it/blob/2e31d3430187d2eee1ba120c954783eebb93b4e8/lib/token.js#L44-L53\n     **/\n    const isOpeningTag = token.nesting !== -1;\n\n    if (isOpeningTag && mapping[token.tag]) {\n      const existingClassAtr = token.attrGet('class') || '';\n\n      const existingClasses = existingClassAtr.split(' ');\n      const givenClasses = mapping[token.tag] || '';\n\n      const newClasses = [\n        ...existingClasses,\n        ...(Array.isArray(givenClasses) ? givenClasses : [givenClasses]),\n      ];\n\n      token.attrSet('class', newClasses.join(' ').trim());\n    }\n\n    // If the tag has any nested children, assign classes to those also\n    if (token.children) {\n      setTokenClasses(token.children, mapping);\n    }\n  });\n}\n\nmodule.exports = function markdownitTagClass(md, mapping = {}) {\n  md.core.ruler.push('markdownit-tag-class', (state) => {\n    setTokenClasses(state.tokens, mapping);\n  });\n};\n","import MarkdownIt from \"markdown-it\";\r\nimport markdownItClass from \"markdown-it-class\";\r\n\r\ndeclare const Prism: Prism;\r\ndeclare const hljs: hljs;\r\n\r\nlet md: MarkdownIt = undefined;\r\n\r\nconst mdDict = {};\r\n\r\nexport function init(\r\n  tagClassMap: { [prop: string]: string[] } = {},\r\n  key: string = \"default\"\r\n) {\r\n  const md = new MarkdownIt({\r\n    highlight,\r\n  }).use(markdownItClass, tagClassMap);\r\n\r\n  key ??= \"default\";\r\n  mdDict[key] = md;\r\n}\r\n\r\nexport function render(src: string, key: string = \"default\") {\r\n  key ??= \"default\";\r\n  return mdDict[key].render(src);\r\n}\r\n\r\nfunction getHighlighter() {\r\n  try {\r\n    if (Prism) {\r\n      return {\r\n        getLanguage(lang: string) {\r\n          return Prism.languages[lang];\r\n        },\r\n        highlight(str: string, lang: string) {\r\n          return Prism.highlight(str, Prism.languages[lang], lang);\r\n        },\r\n      };\r\n    }\r\n  } catch (error) {}\r\n\r\n  try {\r\n    if (hljs) {\r\n      return {\r\n        getLanguage(lang: string) {\r\n          return hljs.getLanguage(lang);\r\n        },\r\n        highlight(str: string, lang: string) {\r\n          return hljs.highlight(str, { language: lang }).value;\r\n        },\r\n      };\r\n    }\r\n  } catch (error) {}\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction highlight(str: string, lang: string) {\r\n  const highlighter = getHighlighter();\r\n\r\n  if (!highlighter) {\r\n    console.warn(\r\n      `[markdown-it-proxy] Highlighter(Prismjs or Highlight.js) is required!`\r\n    );\r\n    return str;\r\n  }\r\n\r\n  if (!lang) {\r\n    return str;\r\n  }\r\n\r\n  lang = getLangCodeFromExtension(lang.toLowerCase());\r\n\r\n  console.log(\"lang\", lang);\r\n\r\n  if (highlighter.getLanguage(lang)) {\r\n    try {\r\n      return highlighter.highlight(str, lang);\r\n    } catch (error) {\r\n      console.error(\r\n        `[markdown-it-proxy] Syntax highlight for language ${lang} failed.`\r\n      );\r\n      return str;\r\n    }\r\n  } else {\r\n    console.warn(\r\n      `[markdown-it-proxy] Syntax highlight for language \"${lang}\" is not supported.`\r\n    );\r\n  }\r\n}\r\n\r\nfunction getLangCodeFromExtension(extension) {\r\n  const extensionMap = {\r\n    cs: \"csharp\",\r\n    html: \"markup\", // TODO: html?\r\n    md: \"markdown\",\r\n    ts: \"typescript\",\r\n    py: \"python\",\r\n    razor: \"markup\", // TODO: csthml?\r\n    sh: \"bash\",\r\n    yml: \"yaml\",\r\n  };\r\n\r\n  return extensionMap[extension] || extension;\r\n}\r\n"],"names":["entities","require$$0","regex","encodeCache","getEncodeCache","exclude","i","ch","cache","String","fromCharCode","test","push","toString","toUpperCase","slice","length","charCodeAt","encode","string","keepEscaped","l","code","nextCode","result","defaultChars","encodeURIComponent","componentChars","encode_1","decodeCache","getDecodeCache","decode","replace","seq","b1","b2","b3","b4","chr","parseInt","decode_1","format","url","protocol","slashes","auth","hostname","indexOf","port","pathname","search","hash","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","urlParse","slashesDenoteHost","u","parse","prototype","lowerProto","hec","rest","trim","split","simplePath","exec","proto","toLowerCase","substr","match","hostEnd","atSign","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","validParts","notHost","bit","unshift","join","qm","mdurl","require$$1","require$$2","require$$3","uc_micro","Any","Cc","Cf","P","Z","require$$4","_class","obj","Object","call","isString","_hasOwnProperty","hasOwnProperty","has","object","key","assign","sources","Array","arguments","forEach","source","TypeError","keys","arrayReplaceAt","src","pos","newElements","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","replaceEntityPattern","name","unescapeMd","str","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","UNICODE_PUNCT_RE","isPunctChar","isMdAsciiPunct","normalizeReference","exports","lib","ucmicro","parse_link_label","parseLinkLabel","state","start","disableNested","level","found","marker","prevPos","labelEnd","max","posMax","oldPos","md","inline","skipToken","parse_link_destination","parseLinkDestination","lines","ok","parse_link_title","parseLinkTitle","helpers","default_rules","code_inline","tokens","idx","options","env","slf","token","renderAttrs","content","code_block","fence","info","langName","langAttrs","highlighted","arr","tmpAttrs","tmpToken","highlight","attrIndex","attrs","langPrefix","image","renderInlineAsText","children","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","Renderer","rules","nextToken","needLf","hidden","block","nesting","tag","type","renderInline","len","render","renderer","Ruler","__rules__","__cache__","__find__","__compile__","self","chains","rule","enabled","alt","altName","chain","fn","at","index","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","isArray","enableOnly","disable","getRules","chainName","ruler","NEWLINES_RE","NULL_RE","normalize","inlineMode","Token","map","tok","isLinkOpen","isLinkClose","linkify","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","blockTokens","links","pretest","normalizeLink","validateLink","schema","normalizeLinkText","markup","lastIndex","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","replacements","blkIdx","typographer","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","t","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","quotes","smartquotes","text_join","curr","last","meta","attrPush","attrData","attrSet","value","attrGet","attrJoin","StateCore","state_core","_rules","require$$5","require$$6","require$$7","Core","process","State","require$$8","parser_core","getLine","line","bMarks","tShift","eMarks","escapedSplit","isEscaped","current","substring","table","startLine","endLine","silent","lineText","nextLine","columns","columnCount","aligns","tableLines","tbodyLines","oldParentType","terminate","terminatorRules","firstCh","secondCh","sCount","blkIndent","shift","pop","parentType","isEmpty","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","blockquote","adjustTab","initial","lastLineEmpty","offset","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","lineMax","bsCount","tokenize","hr","cnt","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","tight","listIndent","Number","Math","min","reference","_endLine","destEndPos","destEndLineNo","href","label","res","title","references","html_blocks","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","html_re","block_names","HTML_SEQUENCES","html","heading","tmp","skipSpacesBack","skipCharsBack","lheading","paragraph","StateBlock","s","indent_found","ddIndent","skipEmptyLines","from","begin","end","keepLastLF","lineIndent","first","queue","lineStart","state_block","require$$9","require$$10","require$$11","ParserBlock","hasEmptyLines","maxNesting","outTokens","require$$12","parser_block","isTerminatorChar","pending","SCHEME_RE","link","linkLevel","matchAtStart","newline","pmax","ws","ESCAPED","_escape","escape","ch1","ch2","origStr","escapedStr","backticks","backtick","matchStart","matchEnd","openerLength","closerLength","backticksScanned","strikethrough","scanned","scanDelims","delimiters","open","can_open","close","can_close","postProcess","startDelim","endDelim","loneMarkers","tokens_meta","emphasis","isStrong","labelStart","ref","parseReference","EMAIL_RE","AUTOLINK_RE","autolink","isLetter","lc","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","balance_pairs","link_pairs","fragments_join","StateInline","pendingLevel","_prev_delimiters","pushPending","token_meta","canSplitWord","count","left_flanking","right_flanking","state_inline","_rules2","require$$13","require$$14","ParserInline","ruler2","require$$15","parser_inline","re","opts","src_Any","src_Cc","src_Z","src_P","src_ZPCc","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","isObject","isRegExp","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","reduce","acc","defaultSchemas","validate","tail","http","no_http","mailto","tlds_2ch_src_re","tlds_default","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","compile","__opts__","tlds","__tlds__","onCompile","__tlds_replaced__","src_tlds","untpl","tpl","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","__compiled__","schemaError","val","__schemas__","compiled","alias","slist","filter","schema_test","schema_search","schema_at_start","Match","__last_index__","__schema__","raw","createMatch","LinkifyIt","schemas","add","definition","set","m","ml","me","next","tld_pos","at_pos","testSchemaAt","keepOld","sort","el","reverse","linkifyIt","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","stringFromCharCode","error","RangeError","array","mapDomain","parts","labels","encoded","ucs2decode","output","counter","extra","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","input","inputLength","n","bias","basic","oldi","w","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","toUnicode","toASCII","punycode","punycode_1","_default","components","core","zero","rules2","commonmark","utils","ParserCore","config","default","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","er","MarkdownIt","presetName","configure","presets","missed","use","plugin","args","apply","parseInline","markdownIt","setTokenClasses","mapping","isOpeningTag","existingClassAtr","existingClasses","givenClasses","newClasses","markdownItClass","markdownitTagClass"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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AED,OAAO/nB,KAAK,CAAClF,MAAN,CAAakF,KAAK,CAAC3D,MAAN,CAAayrB,MAAb,CAAb,CAAP,CAAA;AACD,CAAA;;AAED,SAAS/b,iBAAT,CAA2BzP,GAA3B,EAAgC;EAC9B,IAAIwrB,MAAM,GAAG9nB,KAAK,CAAC9B,KAAN,CAAY5B,GAAZ,EAAiB,IAAjB,CAAb,CAAA;;EAEA,IAAIwrB,MAAM,CAACprB,QAAX,EAAqB;AACvB;AACA;AACA;AACA;AACA;AACA;AACI,IAAA,IAAI,CAACorB,MAAM,CAACvrB,QAAR,IAAoBsrB,mBAAmB,CAAClrB,OAApB,CAA4BmrB,MAAM,CAACvrB,QAAnC,CAAA,IAAgD,CAAxE,EAA2E;MACzE,IAAI;QACFurB,MAAM,CAACprB,QAAP,GAAkBqqB,QAAQ,CAACF,SAAT,CAAmBiB,MAAM,CAACprB,QAA1B,CAAlB,CAAA;OADF,CAEE,OAAOqrB,EAAP,EAAW;AAAQ;AAAA,OAAA;AACtB,KAAA;AACF,GAf6B;;;AAkB9B,EAAA,OAAO/nB,KAAK,CAACrE,MAAN,CAAaqE,KAAK,CAAC3D,MAAN,CAAayrB,MAAb,CAAb,EAAmC9nB,KAAK,CAACrE,MAAN,CAAaN,YAAb,GAA4B,GAA/D,CAAP,CAAA;AACD,CAAA;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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"}